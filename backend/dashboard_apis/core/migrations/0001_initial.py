# Generated by Django 3.2.8 on 2022-03-08 07:36

import core.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('ticker', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256, unique=True)),
                ('logo', models.ImageField(upload_to='images')),
            ],
        ),
        migrations.CreateModel(
            name='Filing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_type', models.CharField(choices=[('10K', '10K'), ('10Q', '10Q'), ('8K', '8K')], max_length=10, verbose_name='filing form type')),
                ('year', models.IntegerField()),
                ('quarter', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField(verbose_name='filing date')),
                ('verbose_text', models.TextField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filings', to='core.company')),
            ],
        ),
        migrations.CreateModel(
            name='KeyMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drilldown_offset', models.IntegerField()),
                ('drilldown_length', models.IntegerField()),
                ('metric_type', models.CharField(choices=[('ARR', 'Annual Recurring Revenue'), ('Customer Churn Rate', 'Customer Churn Rate'), ('LTV', 'Lifetime Value'), ('CAC', 'Customer Acquisition Cost'), ('ARPA', 'Average Run Per Account'), ('Revenue Churn Rate', 'Revenue Churn Rate')], max_length=32)),
                ('metric_value', models.DecimalField(decimal_places=2, max_digits=8)),
                ('metric_unit', models.DecimalField(decimal_places=2, max_digits=8)),
                ('year', models.IntegerField()),
                ('quarter', models.IntegerField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='key_metrics', to='core.company')),
                ('filing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='key_metrics', to='core.filing')),
            ],
        ),
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='basket name')),
                ('companies', models.ManyToManyField(blank=True, to='core.Company')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('baskets', models.ManyToManyField(blank=True, related_name='basket_owner', to='core.Basket')),
                ('bookmarked_companies', models.ManyToManyField(blank=True, related_name='bookmarked_by_user', to='core.Company')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('recently_viewed_companies', models.ManyToManyField(blank=True, related_name='recently_viewed_by_user', to='core.Company')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', core.models.UserManager()),
            ],
        ),
    ]
